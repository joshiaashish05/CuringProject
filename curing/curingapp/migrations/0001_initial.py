# Generated by Django 4.2.5 on 2023-09-12 04:34

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project_Master',
            fields=[
                ('Project_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Project_Name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Site_Master',
            fields=[
                ('Site_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Site_Name', models.CharField(max_length=100)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.project_master')),
            ],
        ),
        migrations.CreateModel(
            name='Structural_Element',
            fields=[
                ('Structural_Element_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Structural_Element', models.CharField(max_length=100)),
                ('No_Of_Days', models.IntegerField()),
                ('Frequency', models.IntegerField()),
                ('Time_Bet_TwoCuring', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction_Concreting',
            fields=[
                ('Transaction_Concreting_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Schedule_Date_and_Time', models.DateTimeField()),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.project_master')),
                ('Site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.site_master')),
                ('Structural_Element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.structural_element')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_Curing',
            fields=[
                ('Schedule_Curing_ID', models.AutoField(primary_key=True, serialize=False)),
                ('Schedule_Date_and_Time', models.DateTimeField()),
                ('Image_Of_Curing', models.ImageField(null=True, upload_to='')),
                ('Status', models.CharField(choices=[('Approve', 'Approve'), ('Not Approve', 'Not Approve')], max_length=11, null=True)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.project_master')),
                ('Site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.site_master')),
                ('Structural_Element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.structural_element')),
                ('Transaction_Concreting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curingapp.transaction_concreting')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('User_ID', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('is_user', models.BooleanField(default=False)),
                ('is_Administrator', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
